{"version":3,"file":"component---src-pages-index-js-cca9fc95f141b45a9f7c.js","mappings":"0OAMMA,GAAOC,EAAAA,EAAAA,SAAOC,EAAAA,IAAMC,MAAM,CAC9BC,UAAU,gIADF,qEAAGH,CAAH,MAYJI,GAAYJ,EAAAA,EAAAA,SAAOK,EAAAA,GAAaH,MAAM,CAC1CC,UAAU,sGADG,0EAAGH,CAAH,MAUTM,EAAAA,SAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,YAAAA,KAOH,OAPGA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,EAAAA,UACJC,OAAA,WACE,OACE,gBAACR,EAAD,CAAMS,GAAIC,KAAKC,MAAMF,IACnB,gBAACJ,EAAD,CAAWO,MAAOF,KAAKC,MAAMC,UAGlC,EAPGL,CAAiBM,EAAAA,WAUvB,IC7BMC,EAAgBb,EAAAA,QAAAA,IAAAA,MAAiB,CACrCG,UAAU,iTADO,0EAAGH,CAAH,MAkEnB,EA3CkB,SAAC,GAAc,IAAZc,EAAW,EAAXA,KACnB,OACE,gBAAC,IAAD,KACE,gBAACC,EAAA,EAAD,KACE,wEACA,wBAAMC,KAAK,cAAcC,SAAS,2CAEpC,4BACE,gBAACJ,EAAD,KACGC,EAAKI,kBAAkBC,MAAMC,KAAI,SAACC,GAAD,OAChC,gBAAC,EAAD,CACEb,GAAIa,EAAKC,YAAYC,KACrBC,MAAOH,EAAKC,YAAYE,MACxBC,YAAaJ,EAAKK,QAClBf,MAAOU,EAAKC,YAAYK,WAAWC,gBAAgBC,gBACnDC,IAAKT,EAAKC,YAAYC","sources":["webpack://tylerfunk.com/./src/components/grid-item/grid-item.js","webpack://tylerfunk.com/./src/pages/index.js"],"sourcesContent":["import React from \"react\";\nimport { GatsbyImage } from \"gatsby-plugin-image\"\nimport { Link } from \"gatsby\";\nimport styled from 'styled-components'\n\n\nconst Post = styled(Link).attrs({\n  className: `\n    block\n    rounded\n    truncate\n    hover:bg-gradient-radial\n    from-indigo-400/50\n    via-tsbg\n    to-tsbg\n  `\n})``\n\nconst PostImage = styled(GatsbyImage).attrs({\n  className: `\n    duration-100\n    transform\n    transition-transform\n    ease-in\n    hover:scale-110\n  `\n})``\n\nclass GridItem extends React.Component {\n  render() {\n    return (\n      <Post to={this.props.to}>\n        <PostImage image={this.props.image} />\n      </Post>\n    )\n  }\n}\n\nexport default GridItem\n","import * as React from \"react\"\nimport { Helmet } from 'react-helmet'\nimport { graphql } from \"gatsby\";\n\nimport Layout from '../layouts/layout'\nimport GridItem from '../components/grid-item/grid-item'\nimport styled from 'styled-components'\n\n\nconst PortfolioGrid = styled.div.attrs({\n  className: `\n    container\n    mx-auto\n    grid\n    grid-cols-1\n    gap-8\n    py-8\n    lg:py-10\n    lg:gap-10\n    md:grid-cols-2\n    xl:grid-cols-3\n    justify-center\n\n    max-w-md\n    sm:max-w-lg\n    md:max-w-screen-md\n    lg:max-w-screen-lg\n    xl:max-w-screen-xl\n    2xl:max-w-screen-2xl\n  `\n})``\n\nconst IndexPage = ({ data }) => {\n  return (\n    <Layout>\n      <Helmet>\n        <title>Tyler Funk | Game Developer & 3D Artist</title>\n        <meta name=\"description\" contents=\"Game Development and 3D Art Portfolio\"></meta>\n      </Helmet>\n      <main>\n        <PortfolioGrid>\n          {data.allMarkdownRemark.nodes.map((node) =>\n            <GridItem\n              to={node.frontmatter.slug}\n              title={node.frontmatter.title}\n              description={node.excerpt}\n              image={node.frontmatter.coverImage.childImageSharp.gatsbyImageData}\n              key={node.frontmatter.slug}\n              />\n          )}\n        </PortfolioGrid>\n      </main>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\nquery MyQuery {\n  allMarkdownRemark(sort: {fields: fileAbsolutePath}, filter: {frontmatter: {published: {eq: true}}, excerpt: {}}) {\n    nodes {\n      excerpt\n      frontmatter {\n        slug\n        title\n        coverImage {\n          childImageSharp {\n            gatsbyImageData(layout: CONSTRAINED, width: 400, webpOptions: {quality: 90})\n          }\n        }\n      }\n    }\n  }\n}\n`\n\nexport default IndexPage\n"],"names":["Post","styled","Link","attrs","className","PostImage","GatsbyImage","GridItem","render","to","this","props","image","React","PortfolioGrid","data","Helmet","name","contents","allMarkdownRemark","nodes","map","node","frontmatter","slug","title","description","excerpt","coverImage","childImageSharp","gatsbyImageData","key"],"sourceRoot":""}