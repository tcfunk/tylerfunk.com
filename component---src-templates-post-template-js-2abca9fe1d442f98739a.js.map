{"version":3,"sources":["webpack:///./src/components/postTitle.js","webpack:///./src/components/postDetails.js","webpack:///./src/templates/postTemplate.js"],"names":["PostTitle","styled","h1","attrs","className","PostDescription","div","PostDetailsContentWrapper","PostDetails","render","this","props","title","dangerouslySetInnerHTML","__html","description","React","Component","Article","MediaList","MediaItem","Img","Template","state","listWidth","listHeight","updateDimensions","width","mviewRef","current","offsetWidth","setState","mviewer","resize","undefined","createRef","mediaListRef","viewerFile","data","markdownRemark","frontmatter","componentDidMount","window","marmoset","height","WebViewer","appendChild","domRoot","addEventListener","componentWillUnmount","removeEventListener","html","Helmet","name","contents","ref","images","map","image","fluid","src","childImageSharp"],"mappings":"qLAeeA,EAbGC,IAAOC,GAAGC,MAAM,CAChCC,UAAU,mIADG,sEAAGH,CAAH,MCGTI,EAAkBJ,IAAOK,IAAIH,MAAM,CACvCC,UAAU,yCADS,kFAAGH,CAAH,MAOfM,EAA4BN,IAAOK,IAAIH,MAAM,CACjDC,UAAU,gEADmB,4FAAGH,CAAH,MAsBhBO,E,kGAZbC,OAAA,WACE,OACE,yBAAKL,UAAWM,KAAKC,MAAMP,WACzB,kBAACG,EAAD,KACE,kBAAC,EAAD,KAAYG,KAAKC,MAAMC,OACvB,kBAACP,EAAD,CAAiBQ,wBAAyB,CAACC,OAAQJ,KAAKC,MAAMI,kB,GAN9CC,IAAMC,W,YCX1BC,EAAUjB,IAAOK,IAAIH,MAAM,CAC/BC,UAAU,iKADC,4EAAGH,CAAH,MAePkB,EAAYlB,IAAOK,IAAIH,MAAM,CACjCC,UAAU,yFADG,8EAAGH,CAAH,MAUTmB,EAAYnB,YAAOoB,KAAKlB,MAAM,CAClCC,UAAU,mBADG,8EAAGH,CAAH,MAQTqB,E,YAOJ,WAAYX,GAAQ,IAAD,SACjB,cAAMA,IAAN,MANFY,MAAQ,CACNC,UAAW,EACXC,WAAY,GAGK,EASnBC,iBAAmB,WACjB,IAAMC,EAAQ,EAAKC,SAASC,QAAQC,YAEpC,EAAKC,SAAS,CACZP,UAAWG,EACXF,WAAoB,EAARE,EAAY,KAG1B,EAAKK,QAAQC,OAAO,EAAKV,MAAMC,UAAW,EAAKD,MAAME,aAdrD,EAAKO,aAAUE,EACf,EAAKN,SAAWZ,IAAMmB,YACtB,EAAKC,aAAepB,IAAMmB,YAC1B,EAAKE,WAAa,EAAK1B,MAAM2B,KAAKC,eAAeC,YAAYH,WAN5C,E,4CAoBnBI,kBAAA,WACE,GAAIC,OAAOC,UAAgC,OAApBjC,KAAK2B,WAAqB,CAC/C,IAAMV,EAAQjB,KAAKkB,SAASC,QAAQC,YAC9Bc,EAAiB,EAARjB,EAAY,GAE3BjB,KAAKsB,QAAU,IAAIU,OAAOC,SAASE,UAAUlB,EAAOiB,EAAQlC,KAAK2B,YACjE3B,KAAKkB,SAASC,QAAQiB,YAAYpC,KAAKsB,QAAQe,SAE/CL,OAAOM,iBAAiB,SAAUtC,KAAKgB,oB,EAK3CuB,qBAAA,WACEP,OAAOQ,oBAAoB,SAAUxC,KAAKgB,mB,EAG5CjB,OAAA,WAAU,IACA8B,EAAmB7B,KAAKC,MAAM2B,KAA9BC,eACAY,EAAsBZ,EAAtBY,KAAMX,EAAgBD,EAAhBC,YAEd,OACE,kBAAC,IAAD,KACE,kBAACY,EAAA,EAAD,KACE,+BAAQZ,EAAY5B,OACpB,0BAAMyC,KAAK,cAAcC,SAAUd,EAAYzB,eAGjD,kBAACG,EAAD,KACE,kBAAC,EAAD,CACEd,UAAU,yCACVQ,MAAO4B,EAAY5B,MACnBG,YAAaoC,IAEf,kBAAChC,EAAD,CAAWoC,IAAM7C,KAAK0B,cACpB,yBAAKhC,UAAU,OAAOmD,IAAM7C,KAAKkB,WAChCY,EAAYgB,OAAOC,KAAI,SAACC,GAAD,OACtB,6BACE,kBAACtC,EAAD,CAAWuC,MAAOD,EAAME,IAAIC,gBAAgBF,gB,GAjErC3C,IAAMC,WA0GdK","file":"component---src-templates-post-template-js-2abca9fe1d442f98739a.js","sourcesContent":["import styled from 'styled-components'\n\nconst PostTitle = styled.h1.attrs({\n  className: `\n    text-2xl\n    font-serif\n    font-light\n    text-gray-100\n    mb-4\n    md:text-3xl\n    lg:text-4xl\n    lg:mb-6\n  `\n})``\n\nexport default PostTitle\n","import React from \"react\";\nimport styled from 'styled-components'\n\nimport PostTitle from './postTitle'\n\nconst PostDescription = styled.div.attrs({\n  className: `\n    text-gray-100\n    font-lg\n  `\n})``\n\nconst PostDetailsContentWrapper = styled.div.attrs({\n  className: `\n    container\n    py-4\n    bg-gray-700\n    lg:px-4\n  `\n})``\n\nclass PostDetails extends React.Component {\n  render() {\n    return (\n      <div className={this.props.className}>\n        <PostDetailsContentWrapper>\n          <PostTitle>{this.props.title}</PostTitle>\n          <PostDescription dangerouslySetInnerHTML={{__html: this.props.description}}></PostDescription>\n        </PostDetailsContentWrapper>\n      </div>\n    )\n  }\n}\n\nexport default PostDetails","import React from 'react';\nimport { Helmet } from 'react-helmet'\nimport { graphql } from 'gatsby'\nimport styled from 'styled-components'\nimport Img from 'gatsby-image'\n\nimport PostDetails from '../components/postDetails'\nimport Layout from '../layouts/layout'\n\n\nconst Article = styled.div.attrs({\n  className: `\n    grid\n    gap-4\n    grid-cols-1\n    grid-rows-1\n    py-6\n    lg:py-8\n    lg:container\n    lg:mx-auto\n    lg:grid-cols-3\n    lg:grid-rows-1\n  `\n})``\n\nconst MediaList = styled.div.attrs({\n  className: `\n    col-start-1\n    col-span-1\n    container\n    lg:px-0\n    lg:col-span-2\n  `\n})``\n\nconst MediaItem = styled(Img).attrs({\n  className: `\n    mb-4\n  `\n})``\n\n\n\nclass Template extends React.Component {\n\n  state = {\n    listWidth: 0,\n    listHeight: 0,\n  }\n\n  constructor(props) {\n    super(props)\n\n    this.mviewer = undefined\n    this.mviewRef = React.createRef()\n    this.mediaListRef = React.createRef()\n    this.viewerFile = this.props.data.markdownRemark.frontmatter.viewerFile\n  }\n\n  updateDimensions = () => {\n    const width = this.mviewRef.current.offsetWidth\n\n    this.setState({\n      listWidth: width,\n      listHeight: width * 9 / 16\n    })\n\n    this.mviewer.resize(this.state.listWidth, this.state.listHeight)\n  }\n\n  componentDidMount() {\n    if (window.marmoset && this.viewerFile !== null) {\n      const width = this.mviewRef.current.offsetWidth \n      const height = width * 9 / 16\n\n      this.mviewer = new window.marmoset.WebViewer(width, height, this.viewerFile)\n      this.mviewRef.current.appendChild(this.mviewer.domRoot)\n\n      window.addEventListener(\"resize\", this.updateDimensions)\n    }\n\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateDimensions)\n  }\n\n  render() {\n    const { markdownRemark } = this.props.data\n    const { html, frontmatter } = markdownRemark\n\n    return (\n      <Layout>\n        <Helmet>\n          <title>{frontmatter.title}</title>\n          <meta name=\"description\" contents={frontmatter.description}></meta>\n        </Helmet>\n\n        <Article>\n          <PostDetails\n            className=\"col-start-1 row-start-1 lg:col-start-3\"\n            title={frontmatter.title}\n            description={html}></PostDetails>\n\n          <MediaList ref={ this.mediaListRef }>\n            <div className='mb-4' ref={ this.mviewRef }></div>\n            {frontmatter.images.map((image) =>\n              <div>\n                <MediaItem fluid={image.src.childImageSharp.fluid} />\n              </div>\n            )}\n          </MediaList>\n        </Article>\n      </Layout>\n    )\n  }\n  \n}\n\nexport const pageQuery = graphql`\nquery($slug: String!) {\n  markdownRemark(frontmatter: {slug: {eq: $slug}}) {\n    html\n    frontmatter {\n      slug\n      title\n      description\n      artstationId\n      viewerFile\n      videos {\n        src {\n          publicURL\n        }\n      }\n      images {\n        label\n        src {\n          childImageSharp {\n            fluid (quality: 85) {\n              ...GatsbyImageSharpFluid_withWebp\n            }\n          }\n        }\n      }\n    }\n  }\n}\n`\n\nexport default Template"],"sourceRoot":""}