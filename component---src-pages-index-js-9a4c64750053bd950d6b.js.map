{"version":3,"file":"component---src-pages-index-js-9a4c64750053bd950d6b.js","mappings":"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","sources":["webpack://tylerfunk.com/./src/components/grid-item/grid-item.js","webpack://tylerfunk.com/./src/components/project/project-card.js","webpack://tylerfunk.com/./src/components/page-section.js","webpack://tylerfunk.com/./src/pages/index.js"],"sourcesContent":["import React from \"react\";\nimport { GatsbyImage } from \"gatsby-plugin-image\"\nimport { Link } from \"gatsby\";\nimport styled from 'styled-components'\n\n\nconst Post = styled(Link).attrs({\n  className: `\n    block\n    rounded\n    truncate\n    hover:bg-gradient-radial\n    from-indigo-400/50\n    via-tsbg\n    to-tsbg\n  `\n})``\n\nconst PostImage = styled(GatsbyImage).attrs({\n  className: `\n    duration-100\n    transform\n    transition-transform\n    ease-in\n    hover:scale-110\n  `\n})``\n\nclass GridItem extends React.Component {\n  render() {\n    return (\n      <Post to={this.props.to}>\n        <PostImage image={this.props.image} />\n      </Post>\n    )\n  }\n}\n\nexport default GridItem\n","import React from \"react\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\nimport { Link } from \"gatsby\";\n\nclass ProjectCard extends React.Component {\n  render() {\n    return (\n      <a className=\"block rounded-lg shadow-lg transition-all hover:scale-110 hover:shadow-indigo-400/50 bg-white\" href={this.props.to} target=\"_blank\">\n        <GatsbyImage image={this.props.image} className=\"w-full rounded-t-lg\" />\n         <div className=\"p-4\">\n          <h3 className=\"text-xl mb-2\">{this.props.title}</h3>\n          <p className=\"font-light\">{this.props.description}</p>\n         </div>\n      </a>\n    )\n  }\n}\n\nexport default ProjectCard","import * as React from \"react\"\nimport styled from 'styled-components'\n\nconst SectionWrapper = styled.section.attrs({\n  className: `\n    py-8\n    lg:py-10\n  `\n})``\n\nconst Container = styled.div.attrs({\n  className: `\n    container\n    mx-auto\n    justify-center\n\n    max-w-md\n    sm:max-w-lg\n    md:max-w-screen-md\n    lg:max-w-screen-lg\n    xl:max-w-screen-xl\n    2xl:max-w-screen-2xl\n  `\n})``\n\nconst SectionHeader = styled.h2.attrs({\n  className: `\n    text-3xl\n    font-light\n    mb-8\n  `\n})``\n\nclass PageSection extends React.Component {\n  render() {\n    var label = ''\n    if (this.props.title) {\n      label = <SectionHeader>{this.props.title}</SectionHeader>\n    }\n\n    return (\n      <SectionWrapper className={this.props.className}>\n        <Container>\n          {label}\n          {this.props.children}\n        </Container>\n      </SectionWrapper>\n    )\n  }\n}\n\nexport default PageSection","import * as React from \"react\"\nimport { Helmet } from 'react-helmet'\nimport { graphql } from \"gatsby\"\nimport styled from 'styled-components'\n\nimport Layout from '../layouts/layout'\nimport GridItem from '../components/grid-item/grid-item'\nimport ProjectCard from '../components/project/project-card'\nimport PageSection from '../components/page-section'\n\nconst ProjectGrid = styled.div.attrs({\n  className: `\n    grid\n    grid-cols-1\n    gap-8\n    lg:gap-10\n    md:grid-cols-2\n    xl:grid-cols-3\n  `\n})``\n\n\nconst PortfolioGrid = styled.div.attrs({\n  className: `\n    grid\n    grid-cols-1\n    gap-8\n    lg:gap-10\n    md:grid-cols-2\n    xl:grid-cols-3\n  `\n})``\n\n// const projects = ['Triune Legacy', 'No Quarter', 'Rovey']\n\n// const Section = styled.section.attrs({\n//   className: `\n//     container\n//     mx-auto\n//     justify-center\n//     py-8\n//     lg:py-10\n\n//     max-w-md\n//     sm:max-w-lg\n//     md:max-w-screen-md\n//     lg:max-w-screen-lg\n//     xl:max-w-screen-xl\n//     2xl:max-w-screen-2xl\n//   `\n// })``\n\n\nconst IndexPage = ({ data }) => {\n  const models = data.allMarkdownRemark.group[0]\n  const projects = data.allMarkdownRemark.group[1]\n  \n  return (\n    <Layout>\n      <Helmet>\n        <title>Tyler Funk | Game Developer & 3D Artist</title>\n        <meta name=\"description\" contents=\"Game Development and 3D Art Portfolio\"></meta>\n      </Helmet>\n      <main>\n        <PageSection className=\"\" title=\"Projects\">\n          <ProjectGrid>\n            {projects.nodes.map((node) =>\n              <ProjectCard\n                to={\"https://tfunk.itch.io/\" + node.frontmatter.slug}\n                title={node.frontmatter.title}\n                key={node.frontmatter.slug}\n                image={node.frontmatter.coverImage.childImageSharp.gatsbyImageData}\n                description={node.frontmatter.description}>\n              </ProjectCard>\n            )}\n          </ProjectGrid>\n        </PageSection>\n        <PageSection className=\"\" title=\"3D Art\">\n          <PortfolioGrid>\n            {models.nodes.map((node) =>\n              <GridItem\n                to={node.frontmatter.slug}\n                title={node.frontmatter.title}\n                description={node.excerpt}\n                image={node.frontmatter.coverImage.childImageSharp.gatsbyImageData}\n                key={node.frontmatter.slug}\n                />\n            )}\n          </PortfolioGrid>\n        </PageSection>\n      </main>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\nquery MyQuery {\n  allMarkdownRemark(sort: {fields: fileAbsolutePath}, filter: {frontmatter: {published: {eq: true}}}) {\n    group(field: frontmatter___type) {\n      fieldValue\n      nodes {\n        excerpt\n        frontmatter {\n          slug\n          title\n          description\n          coverImage {\n            childImageSharp {\n              gatsbyImageData(layout: CONSTRAINED, width: 400, webpOptions: {quality: 90})\n            }\n          }\n        }\n      }\n    }\n  }\n}\n`\n\nexport default IndexPage\n"],"names":["Post","styled","Link","attrs","className","PostImage","GatsbyImage","GridItem","render","to","this","props","image","React","ProjectCard","href","target","G","title","description","SectionWrapper","Container","SectionHeader","PageSection","label","children","ProjectGrid","PortfolioGrid","data","models","allMarkdownRemark","group","projects","Helmet","name","contents","nodes","map","node","frontmatter","slug","key","coverImage","childImageSharp","gatsbyImageData","excerpt"],"sourceRoot":""}